[flake8]

# Print the total number of errors:
count = true

# Don't even try to analyze these:
extend-exclude =
  # Circle CI configs
  .circleci,
  # No need to traverse egg info dir
  *.egg-info,
  # GitHub configs
  .github,
  # Cache files of MyPy
  .mypy_cache,
  # Cache files of pytest
  .pytest_cache,
  # Temp dir of pytest-testmon
  .tmontmp,
  # Countless third-party libs in venvs
  .tox,
  # Occasional virtualenv dir
  .venv,
  # VS Code
  .vscode,
  # Temporary build dir
  build,
  # This contains sdists and wheels that we don't want to check
  dist,
  # Metadata of `pip wheel` cmd is autogenerated
  pip-wheel-metadata,

# IMPORTANT: avoid using ignore option, always use extend-ignore instead
# Completely and unconditionally ignore the following errors:
extend-ignore =
  # Legitimate cases, no need to "fix" these violations:
  # E501: "line too long", its function is replaced by `flake8-length`
  E501,
  # W505: "doc line too long", its function is replaced by `flake8-length`
  W505,
  # I: flake8-isort is drunk + we have isort integrated into pre-commit
  I,
  # S101: MyPy requires `asserts`, plus they're not bad if cooked well
  S101,
  # WPS300: "Found local folder import" -- nothing bad about this
  WPS300,
  # WPS305: "Found f string" -- nothing bad about this
  WPS305,
  # WPS317 enforces weird indents
  WPS317,
  # WPS318 enforces weird indents too
  WPS318,
  # WPS326: "Found implicit string concatenation" -- nothing bad about this
  WPS326,

# IMPORTANT: avoid using select option, always use select-ignore instead
# Enable the following errors:
extend-select =
  # B950: "line too long", longer than `max-line-length` + 10%
  B950,

# https://wemake-python-stylegui.de/en/latest/pages/usage/formatter.html
format = wemake

# Let's not overcomplicate the code:
max-complexity = 10

# Accessibility/large fonts and PEP8 friendly.
# This is being flexibly extended through the `flake8-length`:
max-line-length = 79

# Allow certain violations in certain files:
# Please keep both sections of this list sorted, as it will be easier for others to find and add entries in the future
per-file-ignores =
  # The following ignores have been researched and should be considered permanent
  # each should be preceded with an explanation of each of the error codes
  # If other ignores are added for a specific file in the section following this,
  # these will need to be added to that line as well.

  # WPS412 logic of an extension is in __init__.py file
  # F401   imported but unused
  src/sphinxcontrib/towncrier/__init__.py: F401, WPS412
  # FIXME: WPS201 too many imports
  # FIXME: WPS402 too many `noqa`s
  src/sphinxcontrib/towncrier/ext.py: WPS201, WPS402

  # FIXME: toxfile is currently rather complicated, allowing these temporarily:
  # WPS201 Found module with too many imports: 18 > 12
  # WPS202 Found too many module members: 11 > 7
  # WPS402 Found `noqa` comments overuse: 14
  toxfile.py: WPS201, WPS202, WPS402

  # There are multiple `assert`s (S101)
  # and subprocesses (import – S404; call – S603) in tests;
  # also, using fixtures looks like shadowing the outer scope (WPS442);
  # furthermore, we should be able to import and test private attributes
  # (WPS450) and modules (WPS436), and finally it's impossible to
  # have <= members in tests (WPS202), including many local vars (WPS210):
  tests/**.py: S101, S404, S603, WPS202, WPS210, WPS436, WPS442, WPS450


# Count the number of occurrences of each error/warning code and print a report:
statistics = true

# ## Plugin-provided settings: ##

# flake8-eradicate
# E800:
eradicate-whitelist-extend = isort:\s+\w+

# flake8-pytest-style
# PT001:
pytest-fixture-no-parentheses = true
# PT006:
pytest-parametrize-names-type = tuple
# PT007:
pytest-parametrize-values-type = tuple
pytest-parametrize-values-row-type = tuple
# PT023:
pytest-mark-no-parentheses = true

# flake8-rst-docstrings
rst-directives =
  spelling
rst-roles =
  # Built-in Sphinx roles:
  class,
  data,
  file,
  exc,
  meth,
  mod,
  term,
  py:class,
  py:data,
  py:exc,
  py:meth,
  py:term,
  # Sphinx's internal role:
  event,

# wemake-python-styleguide
show-source = true
