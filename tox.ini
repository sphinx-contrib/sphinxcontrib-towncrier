[tox]
minversion = 3.14.0
envlist =
    fix_lint
    py39
    py38
    py38
    py37
    py36
    pypy3
    coverage
    check-pkg
    docs
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = run tests with {basepython}
setenv =
    PIP_DISABLE_PIP_VERSION_CHECK=1
    COVERAGE_FILE = {toxworkdir}/.coverage.{envname}
    COVERAGE_PROCESS_START = {toxinidir}/.coveragerc
    _COVERAGE_SRC = {envsitepackagesdir}/sphinxcontrib/towncrier
passenv = PYTEST_* PIP_* CI_RUN TERM
extras = testing
commands =
    coverage erase
    coverage run -m pytest \
    --junitxml {toxworkdir}/junit.{envname}.xml \
    {posargs:tests}
    coverage combine
    coverage report --skip-covered --show-missing
    coverage xml -o {toxworkdir}/coverage.{envname}.xml
    coverage html -d {envtmpdir}/htmlcov

[testenv:coverage]
description = combine coverage reports, calculate diff against upstream via DIFF_AGAINST env var
deps =
    coverage>=5.1
    diff_cover>=3
extras =
skip_install = True
passenv = DIFF_AGAINST
setenv =
    COVERAGE_FILE={toxworkdir}/.coverage
commands =
    coverage combine
    coverage report --skip-covered --show-missing
    coverage xml -o {toxworkdir}/coverage.xml
    coverage html -d {toxworkdir}/htmlcov
    python -m diff_cover.diff_cover_tool --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml
depends =
    py39
    py38
    py37
    py36
parallel_show_output = True

[testenv:docs]
basepython = python3.8
description = build documentation
extras = docs
commands =
    python -c 'import glob; import subprocess; subprocess.call(["proselint"] + glob.glob("docs/*.rst") + glob.glob("docs/**/*.rst"))'
    sphinx-build -d "{envtmpdir}/doctree" docs "{toxworkdir}/docs_out" --color -b html {posargs}
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'

[testenv:check-pkg]
description = check that the long description is valid (need for PyPI)
deps =
    twine>=1.12.1
    pep517>=0.8.2
    check-wheel-contents>=0.1.0
skip_install = true
extras =
commands =
    python -m pep517.build -o {envtmpdir} -b -s .
    twine check {envtmpdir}/*
    check-wheel-contents {envtmpdir}

[testenv:fix_lint]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
passenv = *
deps =
    pre-commit>=2
skip_install = True
commands =
    pre-commit run --all-files --show-diff-on-failure
    python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
line_length = 120
known_first_party = sphinxcontrib.towncrier
known_third_party = docutils,setuptools,setuptools_scm,sphinx,sphinx_rtd_theme

[flake8]
max-complexity = 22
max-line-length = 120
ignore = E203, W503, C901, E402

[pep8]
max-line-length = 120

[testenv:dev]
description = generate a DEV environment
extras = testing, docs
usedevelop = True
commands =
    pip list --format=columns
    python -c 'import sys; print(sys.executable)'

[pytest]
junit_family = xunit2
